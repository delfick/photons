#!/usr/bin/env python3

import glob
import os
import runpy
import shutil
import subprocess
import sys
import typing as tp
from pathlib import Path

here = Path(__file__).parent
manager = runpy.run_path(str(Path(__file__).parent / "bootstrap_venvstarter.py"))["manager"]


def run(venv_location: Path, args: tp.List[str]) -> tp.Union[None, str, tp.List[str]]:
    os.environ["NOSE_OF_YETI_BLACK_COMPAT"] = "true"
    devtools_location = Path(__file__).parent / "devtools.py"
    if args and args[0] in ["docs", "format", "lint", "tests", "tox", "types"]:
        return ["python", str(devtools_location)]
    else:
        return "lifx"


manager = manager(run).named(".python")
manager.add_no_binary("black")
manager.add_env(NOSE_OF_YETI_BLACK_COMPAT="true")
manager.add_local_dep(
    "{here}",
    "..",
    "modules",
    version_file=(
        "photons_app",
        "__init__.py",
    ),
    name="lifx-photons-core[web-server,tests]=={version}",
)
manager.add_local_dep(
    "{here}",
    "..",
    "docs",
    version_file=(
        "photons_docs",
        "__init__.py",
    ),
    name="lifx-photons-docs=={version}",
)
manager.add_local_dep(
    "{here}",
    "..",
    "apps",
    "arranger",
    version_file=(
        "arranger",
        "__init__.py",
    ),
    name="lifx-photons-arranger=={version}",
)
manager.add_local_dep(
    "{here}",
    "..",
    "apps",
    "interactor",
    version_file=(
        "interactor",
        "__init__.py",
    ),
    name="lifx-photons-interactor=={version}",
)

if "TOX_PYTHON" in os.environ:
    folder = Path(os.environ["TOX_PYTHON"]).parent.parent
    manager.place_venv_in(folder.parent)
    manager.named(folder.name)
else:
    manager.add_no_binary("black")
    manager.add_requirements_file("{here}", "requirements.dev.txt")

manager.min_python("3.12")
manager.run()
