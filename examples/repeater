#!/usr/bin/python -ci=__import__;o=i("os");s=i("sys");a=s.argv;p=o.path;y=p.join(p.dirname(a[1]),".python");o.execv(y,a)

from photons_app.tasks import task_register as task

from photons_messages import DeviceMessages, LightMessages
from photons_control.script import Pipeline, Repeater

import logging

log = logging.getLogger("repeater")


@task
class repeater(task.Task):
    """
    Do a never ending loop getting information from your devices

    ``repeater d073d5000001,d073d5000002``

    or if you want it to find devices each loop,

    ``repeater``

    Will find the product type, current firmware, group, location and label for your devices.
    """

    target = task.requires_target()
    reference = task.provides_reference(special=True)

    async def execute_task(self, **kwargs):
        async def on_done_loop():
            log.info("loop done")

        getter = [
            DeviceMessages.GetVersion(),
            DeviceMessages.GetGroup(),
            DeviceMessages.GetLocation(),
            DeviceMessages.GetHostFirmware(),
            LightMessages.GetColor(),
        ]
        pipeline = Pipeline(*getter, spread=1)
        repeater = Repeater(pipeline, min_loop_time=10, on_done_loop=on_done_loop)

        def error_catcher(e):
            log.error(e)

        async for pkt in self.target.send(
            repeater, self.reference, error_catcher=error_catcher, message_timeout=5
        ):
            print(pkt.serial, repr(pkt.payload))


if __name__ == "__main__":
    __import__("photons_core").run("lan:repeater {@:1:}")
