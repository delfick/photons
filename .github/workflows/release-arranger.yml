on:
  - workflow_dispatch

name: Release Photons Arranger

jobs:
  build:
    name: Create the package
    runs-on: ubuntu-latest
    environment: github_release
    permissions:
      # for trusted publishing
      id-token: write
      # for creating the release
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - uses: actions/setup-node@v3
        with:
          node-version: '17'

      - id: build_assets
        run: |
          set -e
          rm -rf arranger/static/dist/prod
          python3 -m venv /tmp/photons
          /tmp/photons/bin/python -m pip install -e modules
          /tmp/photons/bin/python -m pip install -e apps/arranger
          export NODE_OPTIONS=--openssl-legacy-provider
          export NODE_ENV=production
          /tmp/photons/bin/lifx arranger_assets static
          if ! ls apps/arranger/arranger/static/dist/prod/static/*.js > /dev/null; then
            ls -R apps/arranger/arranger/static/dist/prod
            echo "Couldn't find any javascript!"
            exit 1
          fi

      - id: see_built_assets
        run: ls -R apps/arranger/arranger/static/dist

      - id: build
        run: cd apps/arranger && ../../tools/uv build -o dist

      - id: version
        run: |
          VERSION=$(python -c "import runpy; print(runpy.run_path('apps/arranger/arranger/__init__.py')['VERSION'])")
          VERSIONDASH=$(python -c "import runpy; print(runpy.run_path('apps/arranger/arranger/__init__.py')['VERSION'].replace('.', '-'))")

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "versiondash=$VERSIONDASH" >> $GITHUB_OUTPUT

      - id: package
        run: >
          echo "package=lifx_photons_arranger-${{ steps.version.outputs.version}}.tar.gz" >> $GITHUB_OUTPUT

      - id: create-release
        uses: softprops/action-gh-release@v2
        with:
          name: Photons Arranger ${{ steps.version.outputs.version }}
          body: "https://photons.delfick.com/apps/arranger/index.html#release-arranger-${{ steps.version.outputs.versiondash }}"
          tag_name: "release-arranger-${{ steps.version.outputs.version }}"
          fail_on_unmatched_files: true
          draft: false
          prerelease: false
          files: "apps/arranger/dist/*"

      - name: publish
        uses: pypa/gh-action-pypi-publish@release/v1
